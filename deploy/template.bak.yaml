AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  BusObservatoryGrabber MASTER STACK all lambdas and events for obtaining data.

Globals:
  Function:
    Timeout: 600

Resources:
  MyAPI:
      Type: AWS::Serverless::Api
      Properties:
        StageName: Prod
  BusObservatoryGrabberFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: BusObservatoryGrabber/
      Handler: app.lambda_handler
      MemorySize: 512
      Runtime: python3.9
      Architectures:
        - arm64
      Policies:
        - S3WritePolicy:
            BucketName: 'busobservatory'
        - S3ReadPolicy:
            BucketName: 'busobservatory'
        - S3WritePolicy:
            BucketName: 'busobservatory-migration'
        - S3ReadPolicy:
            BucketName: 'busobservatory-migration'
      Events:
        BusObservatoryGrabber:
          Type: Api
          Properties:
            Path: /BusObservatoryGrabber
            Method: get
            RestApiId: !Ref MyAPI
        ScheduledGrabber:
          Type: Schedule
          Properties:
            Name: "BusObservatoryGrabber-tfnsw-sam"
            Description: "TEST Universal Grabber for Transport for New South Wales (tfnsw), deployed by SAM template."
            Schedule: rate(1 minute)
            Input: '{"queryStringParameters": {"system_id":"TEST_tfnsw_buses"}}'

Outputs:
  BusObservatoryGrabberApi:
    Description: "API Gateway endpoint URL for Prod stage for BusObservatoryGrabber function"
    Value: !Sub "https://${MyAPI}.execute-api.${AWS::Region}.amazonaws.com/Prod/BusObservatoryGrabber/"
  BusObservatoryGrabberFunction:
    Description: "BusObservatoryGrabber Lambda Function ARN"
    Value: !GetAtt BusObservatoryGrabberFunction.Arn
  BusObservatoryGrabberFunctionIamRole:
    Description: "Implicit IAM Role created for BusObservatoryGrabber function"
    Value: !GetAtt BusObservatoryGrabberFunctionRole.Arn
